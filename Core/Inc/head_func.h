/**
 ******************************************************************************
  * File Name          : head_func.h
  * Description        : This file is generated by 위대한 송 인재 on Jul 30, 2025
 ******************************************************************************
 *
 * COPYRIGHT(c) 2024 DSN Co. Ltd.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *   1. Redistributions of source code must retain the above copyright notice,
 *      this list of conditions and the following disclaimer.
 *   2. Redistributions in binary form must reproduce the above copyright notice,
 *      this list of conditions and the following disclaimer in the documentation
 *      and/or other materials provided with the distribution.
 *   3. Neither the name of STMicroelectronics nor the names of its contributors
 *      may be used to endorse or promote products derived from this software
 *      without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 ******************************************************************************
 */


#ifndef INC_HEAD_HEAD_FUNC_H_
#define INC_HEAD_HEAD_FUNC_H_




bool SMB_ManiObj_backup(SMB_ManiObj_t *pManiObj, SMB_ControlObj_t *pControlObj);
bool SMB_ManiObj_restore(SMB_ManiObj_t *pManiObj, SMB_ControlObj_t *pControlObj);

bool save_smb_configObj_onto_fs(SMB_ConfigObj_t *pconfig);

HAL_StatusTypeDef Serial_PutByte( uint8_t param );

bool rb_command_handler_tbl_init();

bool sb_report_to_rb (rb_head_type_t type, uint32_t value);

bool rb_cmd_handler(rb_msg_t *pq_msg);

uint8_t checksum(uint8_t *addr, uint8_t count);
void doSystemReset();

int16_t __LL_ADC_CALC_DATA_TO_TEMPERATURE(uint16_t);

bool func_lamp_set(lamp_level_t lamp_level);
lampObj_t *get_lamp_handle();
bool lampObj_init(lampObj_t *plampObj);

bool lcdObj_init(lcdObj_t *plcdObj);
lcdObj_t *get_lcd_handle();
bool func_lcd_set(lcd_on_off_t lcd_on_off_flag);

bool speakerObj_init(speakerObj_t *pspeakerObj);
speakerObj_t *get_speaker_handle();
bool func_speaker_set(speaker_on_off_t speaker_on_off_flag);

bool inverterObj_init(inverterObj_t *pinverterObj);
inverterObj_t *get_inverter_handle();
bool func_inverter_set(inverter_on_off_t inverter_on_off_flag);

bool fanObj_init(fanObj_t *pfanObj);
fanObj_t *get_fan_handle();
bool func_fan_set(fan_on_off_t fan_on_off_flag);

bool muchar2Obj_init(muchar2Obj_t *pmuchar2Obj);
muchar2Obj_t *get_muchar2_handle();
bool func_muchar2_set(muchar2_on_off_t muchar2_on_off_flag);

bool muchar1Obj_init(muchar1Obj_t *pmuchar1Obj);
muchar1Obj_t *get_muchar1_handle();
bool func_muchar1_set(muchar1_on_off_t muchar1_on_off_flag);

bool yucharObj_init(yucharObj_t *pyucharObj);
yucharObj_t *get_yuchar_handle();
bool func_yuchar_set(yuchar_on_off_t yuchar_on_off_flag);

bool ptcObj_init(ptcObj_t *pptcObj);
ptcObj_t *get_ptc_handle();
bool func_ptc_set(ptc_on_off_t ptc_on_off_flag);

bool lteObj_init(lteObj_t *plteObj);
lteObj_t *get_lte_handle();
bool func_lte_set(lte_on_off_t lte_on_off_flag);

bool sirenObj_init(sirenObj_t *psirenObj);
sirenObj_t *get_siren_handle();
bool func_ptc_set(ptc_on_off_t ptc_on_off_flag);

bool ledbarObj_init(ledbarObj_t *pledbarObj);
ledbarObj_t *get_ledbar_handle();
bool func_ledbar_color_set(ledbar_color_t ledbar_color);

bool SMB_1sec_alarm_restart();
bool duty_minutes_set(SMB_StatusObj_t *sp);
bool SB_1sec_alarm_restart();

void hexDump (SYS_CMD_DEVICE_NODE* pCmdIO, uint32_t nominal_addr, void *addr, uint32_t len);
void HexDump (uint32_t nominal_addr, void *addr, uint32_t len);


#endif /* INC_HEAD_HEAD_FUNC_H_ */
