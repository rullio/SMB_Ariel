/**
  ******************************************************************************
  * File Name          : head_fs.h
  * Description        : This file is generated by 위대한 송 인재.
  ******************************************************************************
  *
  * COPYRIGHT(c) 2024 Daeshin Networks Co. Ltd.
  *
  * Redistribution and use in source and binary forms, with or without modification,
  * are permitted provided that the following conditions are met:
  *   1. Redistributions of source code must retain the above copyright notice,
  *      this list of conditions and the following disclaimer.
  *   2. Redistributions in binary form must reproduce the above copyright notice,
  *      this list of conditions and the following disclaimer in the documentation
  *      and/or other materials provided with the distribution.
  *   3. Neither the name of STMicroelectronics nor the names of its contributors
  *      may be used to endorse or promote products derived from this software
  *      without specific prior written permission.
  *
  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  *
  ******************************************************************************
  */

#ifndef INC_HEAD_FS_H_

#define INC_HEAD_FS_H_

#include "lfs.h"
#include "lfs_util.h"

#define LFS_BUF_CACHE_SIZE		512
#define LFS_LOOKAHEAD_SIZE		(LFS_BUF_CACHE_SIZE/8)	//16
#define FS_FLASH_OFFSET			0			///?0x69000

typedef struct _fs_t fs_t;

typedef struct _fs_t
{
  bool is_open;

  lfs_file_t file;
} fs_t;

int32_t	fsInit(void);
int32_t fsIsInit(void);
int32_t fsIsExist(const char *name);
int32_t fsIsDir(const char *dirname);
int32_t fsGetFree(void);
int32_t fsGetSize(void);
int32_t fsMakeDir(const char *dirname);
int32_t fsFileOpen(fs_t *p_fs, const char *name);
int32_t fsFileClose(fs_t *p_fs);
int32_t fsFileRewind(fs_t *p_fs);
int32_t fsFileDel(const char *filename);
int32_t fsFileRead(fs_t *p_fs, uint8_t *p_data, uint32_t length);
int32_t fsFileWrite(fs_t *p_fs, uint8_t *p_data, uint32_t length);
int32_t fsFileSize(fs_t *p_fs);
int32_t fsFileSeek(fs_t *p_fs, uint32_t seek_pos);
int32_t fsFileSync(fs_t *p_fs);




#endif /* INC_HEAD_FS_H_ */
