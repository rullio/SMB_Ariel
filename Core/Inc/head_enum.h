/**
 ******************************************************************************
  * File Name          : head_enum.h
  * Description        : This file is generated by 위대한 송 인재 on Jul 30, 2025
 ******************************************************************************
 *
 * COPYRIGHT(c) 2024 DSN Co. Ltd.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *   1. Redistributions of source code must retain the above copyright notice,
 *      this list of conditions and the following disclaimer.
 *   2. Redistributions in binary form must reproduce the above copyright notice,
 *      this list of conditions and the following disclaimer in the documentation
 *      and/or other materials provided with the distribution.
 *   3. Neither the name of STMicroelectronics nor the names of its contributors
 *      may be used to endorse or promote products derived from this software
 *      without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 ******************************************************************************
 */


#ifndef INC_HEAD_HEAD_ENUM_H_
#define INC_HEAD_HEAD_ENUM_H_

typedef enum {
	SMB_MODE_NETWORK = true,
	SMB_MODE_STANDALONE = !SMB_MODE_NETWORK,
} smb_work_mode_t;


typedef enum {
	BANNER_DSN = 0,
	BANNER_SMART,
	BANNER_BENCH,
	BANNER_PEE,
	BANNER_SHIT,
	BANNER_BALLET,
	BANNER_END,
} smb_banner_t;

typedef enum {
	LED_ACT_TOGGLE_TIMEOUT		= TIMEOUT_500_MSEC,
	CONSOLE_SCAN_TIMEOUT		= TIMEOUT_10_MSEC,
	UPTIME_COUNT_TIMEOUT		= TIMEOUT_1_SEC,
} os_timer_timeout_t;

/*******************************************************************************
 LED BAR Object
 *******************************************************************************/
typedef enum {
	LEDBAR_OFF,
	LEDBAR_RED,
	LEDBAR_YELLOW,
	LEDBAR_GREEN,
	LEDBAR_BLUE,
	LEDBAR_WHITE,
	LEDBAR_COLOR_DEFAULT = LEDBAR_OFF,
} ledbar_color_t;

/*******************************************************************************
 SIREN Object
 *******************************************************************************/
typedef enum {
	SIREN_OFF = 0,
	SIREN_ON,
} siren_on_off_t;

/*******************************************************************************
 LTE Object
 *******************************************************************************/
typedef enum {
	LTE_OFF = 0,
	LTE_ON,
} lte_on_off_t;

/*******************************************************************************
 PTC Object
 *******************************************************************************/
typedef enum {
	PTC_OFF = 0,
	PTC_ON,
} ptc_on_off_t;

/*******************************************************************************
 YUCHAR Object
 *******************************************************************************/
typedef enum {
	YUCHAR_OFF = 0,
	YUCHAR_ON,
} yuchar_on_off_t;

/*******************************************************************************
 MUCHAR Object
 *******************************************************************************/
typedef enum {
	MUCHAR_OFF = 0,
	MUCHAR_ON,
} muchar_on_off_t;

/*******************************************************************************
 FAN Object
 *******************************************************************************/
typedef enum {
	FAN_OFF = 0,
	FAN_ON,
} fan_on_off_t;

/*******************************************************************************
 INVERTER Object
 *******************************************************************************/
typedef enum {
	INVERTER_OFF = 0,
	INVERTER_ON,
} inverter_on_off_t;

/*******************************************************************************
 SPEAKER Object
 *******************************************************************************/
typedef enum {
	SPEAKER_OFF = 0,
	SPEAKER_ON,
} speaker_on_off_t;

/*******************************************************************************
 LCD Object
 *******************************************************************************/
typedef enum {
	LCD_OFF = 0,
	LCD_ON,
} lcd_on_off_t;











#endif /* INC_HEAD_HEAD_ENUM_H_ */
